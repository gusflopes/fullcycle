version: '3'

services:
  node:
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    # image: gusflopes/node-example
    container_name: node
    entrypoint: npm run start
    restart: always
    volumes:
      - ./nodejs:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - fc-docker
    tty: true
    depends_on:
      db-mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 1s
      timeout: 20s
      retries: 10

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - fc-docker
    ports:
      - "8080:8080"
    tty: true
    depends_on:
      node:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "http://localhost:8080"]
      interval: 30s
      timeout: 30s
      retries: 5

  db-mysql:
    image: mysql:5.7
    container_name: db-mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
      - ./migration.sql:/docker-entrypoint-initdb.d/migration.sql
    environment:
      MYSQL_DATABASE: node-db
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    networks:
      - fc-docker
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 1s
      timeout: 20s
      retries: 10

networks:
  fc-docker:
    driver: bridge
